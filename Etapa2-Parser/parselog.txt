   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(TkOBlock,'|[',1,0)
   yacc.py: 445:Action : Shift and goto state 6
   yacc.py: 410:
   yacc.py: 411:State  : 6
   yacc.py: 435:Stack  : TkOBlock . LexToken(TkDeclare,'declare',2,5)
   yacc.py: 445:Action : Shift and goto state 30
   yacc.py: 410:
   yacc.py: 411:State  : 30
   yacc.py: 435:Stack  : TkOBlock TkDeclare . LexToken(TkId,'a',3,17)
   yacc.py: 445:Action : Shift and goto state 64
   yacc.py: 410:
   yacc.py: 411:State  : 64
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId . LexToken(TkComma,',',3,18)
   yacc.py: 471:Action : Reduce rule [ID_LIST -> TkId] with ['a'] and goto state 66
   yacc.py: 506:Result : <IdList @ 0x7f4e964c19e8> (<g_AbsSyntaxTree.IdList object at 0x7f4e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST . LexToken(TkComma,',',3,18)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkComma . LexToken(TkId,'b',3,20)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkComma TkId . LexToken(TkComma,',',3,21)
   yacc.py: 471:Action : Reduce rule [ID_LIST -> ID_LIST TkComma TkId] with [<IdList @ 0x7f4e964c19e8>,',','b'] and goto state 66
   yacc.py: 506:Result : <IdList @ 0x7f4e964c1a58> (<g_AbsSyntaxTree.IdList object at 0x7f4e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST . LexToken(TkComma,',',3,21)
   yacc.py: 445:Action : Shift and goto state 92
   yacc.py: 410:
   yacc.py: 411:State  : 92
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkComma . LexToken(TkId,'c',3,23)
   yacc.py: 445:Action : Shift and goto state 101
   yacc.py: 410:
   yacc.py: 411:State  : 101
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkComma TkId . LexToken(TkTwoPoints,':',3,25)
   yacc.py: 471:Action : Reduce rule [ID_LIST -> ID_LIST TkComma TkId] with [<IdList @ 0x7f4e964c1a58>,',','c'] and goto state 66
   yacc.py: 506:Result : <IdList @ 0x7f4e964ae198> (<g_AbsSyntaxTree.IdList object at 0x7f4e ...)
   yacc.py: 410:
   yacc.py: 411:State  : 66
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST . LexToken(TkTwoPoints,':',3,25)
   yacc.py: 445:Action : Shift and goto state 91
   yacc.py: 410:
   yacc.py: 411:State  : 91
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkTwoPoints . LexToken(TkInt,'int',3,27)
   yacc.py: 445:Action : Shift and goto state 99
   yacc.py: 410:
   yacc.py: 411:State  : 99
   yacc.py: 430:Defaulted state 99: Reduce using 9
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkTwoPoints TkInt . None
   yacc.py: 471:Action : Reduce rule [DATATYPE -> TkInt] with ['int'] and goto state 97
   yacc.py: 506:Result : <str @ 0x7f4e964c1bc8> ('int')
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkTwoPoints DATATYPE . LexToken(TkSemicolon,';',3,30)
   yacc.py: 445:Action : Shift and goto state 105
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 435:Stack  : TkOBlock TkDeclare ID_LIST TkTwoPoints DATATYPE TkSemicolon . LexToken(TkCBlock,']|',4,32)
   yacc.py: 471:Action : Reduce rule [DECLARATION_LIST -> ID_LIST TkTwoPoints DATATYPE TkSemicolon] with [<IdList @ 0x7f4e964ae198>,':','int',';'] and goto state 65
   yacc.py: 506:Result : <DeclarationList @ 0x7f4e964c1c18> (<g_AbsSyntaxTree.DeclarationList object  ...)
   yacc.py: 410:
   yacc.py: 411:State  : 65
   yacc.py: 435:Stack  : TkOBlock TkDeclare DECLARATION_LIST . LexToken(TkCBlock,']|',4,32)
   yacc.py: 471:Action : Reduce rule [DECLARE -> TkDeclare DECLARATION_LIST] with ['declare',<DeclarationList @ 0x7f4e964c1c18>] and goto state 29
   yacc.py: 506:Result : <Declare @ 0x7f4e964c1a90> (<g_AbsSyntaxTree.Declare object at 0x7f4 ...)
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 435:Stack  : TkOBlock DECLARE . LexToken(TkCBlock,']|',4,32)
   yacc.py: 474:Action : Reduce rule [LAMBDA -> <empty>] with [] and goto state 28
   yacc.py: 548:Result : <NoneType @ 0xa3d000> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 430:Defaulted state 28: Reduce using 18
   yacc.py: 435:Stack  : TkOBlock DECLARE LAMBDA . LexToken(TkCBlock,']|',4,32)
   yacc.py: 471:Action : Reduce rule [INSTRUCTION_LIST -> LAMBDA] with [None] and goto state 63
   yacc.py: 506:Result : <NoneType @ 0xa3d000> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 63
   yacc.py: 435:Stack  : TkOBlock DECLARE INSTRUCTION_LIST . LexToken(TkCBlock,']|',4,32)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 435:Stack  : TkOBlock DECLARE INSTRUCTION_LIST TkCBlock . $end
   yacc.py: 471:Action : Reduce rule [INSTRUCTION -> TkOBlock DECLARE INSTRUCTION_LIST TkCBlock] with ['|[',<Declare @ 0x7f4e964c1a90>,None,']|'] and goto state 2
   yacc.py: 506:Result : <NoneType @ 0xa3d000> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : INSTRUCTION . $end
   yacc.py: 571:Done   : Returning <NoneType @ 0xa3d000> (None)
   yacc.py: 572:PLY: PARSE DEBUG END
