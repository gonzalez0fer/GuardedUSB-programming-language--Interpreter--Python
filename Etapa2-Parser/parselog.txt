   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 435:Stack  : . LexToken(TkOBlock,'|[',1,0)
   yacc.py: 445:Action : Shift and goto state 1
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 435:Stack  : TkOBlock . LexToken(TkDeclare,'declare',2,5)
   yacc.py: 445:Action : Shift and goto state 10
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 435:Stack  : TkOBlock TkDeclare . LexToken(TkId,'a',3,17)
   yacc.py: 445:Action : Shift and goto state 51
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId . LexToken(TkComma,',',3,18)
   yacc.py: 445:Action : Shift and goto state 98
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId TkComma . LexToken(TkId,'b',3,20)
   yacc.py: 445:Action : Shift and goto state 51
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId TkComma TkId . LexToken(TkComma,',',3,21)
   yacc.py: 445:Action : Shift and goto state 98
   yacc.py: 410:
   yacc.py: 411:State  : 98
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId TkComma TkId TkComma . LexToken(TkId,'c',3,23)
   yacc.py: 445:Action : Shift and goto state 51
   yacc.py: 410:
   yacc.py: 411:State  : 51
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId TkComma TkId TkComma TkId . LexToken(TkTwoPoints,':',3,25)
   yacc.py: 471:Action : Reduce rule [Variables -> TkId] with ['c'] and goto state 159
   yacc.py: 506:Result : <SyntaxLeaf @ 0x7f6b179a90b8> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 430:Defaulted state 159: Reduce using 92
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId TkComma TkId TkComma Variables . LexToken(TkTwoPoints,':',3,25)
   yacc.py: 471:Action : Reduce rule [Variables -> TkId TkComma Variables] with ['b',',',<SyntaxLeaf @ 0x7f6b179a90b8>] and goto state 159
   yacc.py: 506:Result : <SyntaxLeaf @ 0x7f6b179a3fd0> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 159
   yacc.py: 430:Defaulted state 159: Reduce using 92
   yacc.py: 435:Stack  : TkOBlock TkDeclare TkId TkComma Variables . LexToken(TkTwoPoints,':',3,25)
   yacc.py: 471:Action : Reduce rule [Variables -> TkId TkComma Variables] with ['a',',',<SyntaxLeaf @ 0x7f6b179a3fd0>] and goto state 49
   yacc.py: 506:Result : <SyntaxLeaf @ 0x7f6b17d39f60> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 49
   yacc.py: 435:Stack  : TkOBlock TkDeclare Variables . LexToken(TkTwoPoints,':',3,25)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 435:Stack  : TkOBlock TkDeclare Variables TkTwoPoints . LexToken(TkInt,'int',3,27)
   yacc.py: 445:Action : Shift and goto state 157
   yacc.py: 410:
   yacc.py: 411:State  : 157
   yacc.py: 435:Stack  : TkOBlock TkDeclare Variables TkTwoPoints TkInt . LexToken(TkCBlock,']|',4,31)
   yacc.py: 471:Action : Reduce rule [Datatype -> TkInt] with ['int'] and goto state 155
   yacc.py: 506:Result : <SyntaxLeaf @ 0x7f6b17d39f98> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 435:Stack  : TkOBlock TkDeclare Variables TkTwoPoints Datatype . LexToken(TkCBlock,']|',4,31)
   yacc.py: 471:Action : Reduce rule [Declaration -> Variables TkTwoPoints Datatype] with [<SyntaxLeaf @ 0x7f6b17d39f60>,':',<SyntaxLeaf @ 0x7f6b17d39f98>] and goto state 50
   yacc.py: 506:Result : <SyntaxLeaf @ 0x7f6b19391c18> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 50
   yacc.py: 435:Stack  : TkOBlock TkDeclare Declaration . LexToken(TkCBlock,']|',4,31)
   yacc.py: 445:Action : Shift and goto state 97
   yacc.py: 410:
   yacc.py: 411:State  : 97
   yacc.py: 435:Stack  : TkOBlock TkDeclare Declaration TkCBlock . $end
   yacc.py: 471:Action : Reduce rule [Block -> TkOBlock TkDeclare Declaration TkCBlock] with ['|[','declare',<SyntaxLeaf @ 0x7f6b19391c18>,']|'] and goto state 2
   yacc.py: 506:Result : <SyntaxLeaf @ 0x7f6b179a3f60> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 435:Stack  : Block . $end
   yacc.py: 571:Done   : Returning <SyntaxLeaf @ 0x7f6b179a3f60> (<g_AbsSyntaxTree.SyntaxLeaf object at 0x ...)
   yacc.py: 572:PLY: PARSE DEBUG END
