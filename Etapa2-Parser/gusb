from lexer import *
from parser import *
import ply.lex as lex
import ply.yacc as yacc

import sys

if __name__ == '__main__':

    # Inicializacion del lexer
    lexer = lex.lex()
    
    # Bloque que garantiza parametros de entrada via bash para iniciar nuestro programa
    if (len(sys.argv) != 2):
        print('Error: incorrect number of parameters\n      input file is missing.')
        sys.exit(1)
    elif not (sys.argv[1].lower().endswith(('.gusb'))):
        print('Error: unknown file extension\n      only .gusb files supported.')
        sys.exit(1)
    else:
        pass

    #lectura del archivo que contiene el programa a evaluar.
    input_file = open(sys.argv[1], "r")
    meta_program = input_file.read()

    # Pasando el archivo al lexer.
    lexer.input(meta_program)
    while True:
        tok = lexer.token()
        if not tok: break
        token_list.append(tok)
    
    # Impresion de errores del lexer, en caso de existir.
    if (len(error) != 0):
        for aux in error :
            print('Error: Unexpected character "' + str(aux.value[0]) +'" in row ' + str(aux.lineno) +' ,column '+ str(find_column(lexer.lexdata,aux)))
    else:
        # Inicializacion del parser.
        parser = yacc.yacc()

        #pasando el programa lexicograficamente correcto al parser.
        out = parser.parse(meta_program)

        #impresion del arbol sintactico en caso de no existir errores en el parser.
        if not(parser_error):
            print (out.toString(0))
    input_file.close()